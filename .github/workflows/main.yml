name: Main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

env:
  # Change this to invalidate existing cache.
  CACHE_PREFIX: v0
  PYTHON_PATH: ./

jobs:
  style:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off .[style]
      - name: Run flake8
        uses: py-actions/flake8@v2
        with:
          path: "graphs"
      - name: Run isort
        uses: isort/isort-action@master
      - name: Run black
        uses: psf/black@stable
        with:
          options: "--check --verbose"
      - name: Run codespell
        uses: codespell-project/actions-codespell@master
        with:
          check_filenames: true
          check_hidden: true
          skip: './.git,./build,./.mypy_cache,./.pytest_cache'
          ignore_words_file: ./.codespellignore
      - name: Run pydocstyle
        run: pydocstyle .

  build:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: [3.8, 3.9, "3.10"]
    name: build ${{ matrix.os }} - py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off .[build]
      - name: Test package install
        run: python -c "import graphs; print(graphs.__version__)"
      - name: Remove package install
        run: python -m pip uninstall -yq graphs
      - name: Build package
        run: python -m build
      - name: Upload package distribution files
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: dist
      - name: Install sdist
        run: pip install ./dist/*.tar.gz
      - name: Test sdist install
        run: python -c "import graphs; print(graphs.__version__)"
      - name: Remove sdist install
        run: python -m pip uninstall -yq graphs
      - name: Install wheel
        run: pip install ./dist/*.whl
      - name: Test wheel install
        run: python -c "import graphs; print(graphs.__version__)"
      - name: Remove wheel install
        run: python -m pip uninstall -yq graphs

  test:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: [3.8, "3.10"]  # oldest and newest supported versions
        networkx: [stable, main]
    name: pytest ${{ matrix.os }} - py${{ matrix.python-version }} - Networkx ${{ matrix.networkx }}
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: main  # clone repository in a sub-directory
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - name: Install package
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip install --progress-bar off main/.[test]
      - name: Install Networkx (main)
        if: "matrix.networkx == 'main'"
        run: |
          python -m pip uninstall -yq networkx
          python -m pip install --progress-bar off git+https://github.com/networkx/networkx
      - name: Run pytest  # headless via Xvfb on linux
        run: pytest main/graphs --cov=main/graphs --cov-report=xml --cov-config=main/pyproject.toml
      - name: Upload coverage stats to codecov
        if: ${{ matrix.os == 'ubuntu' && matrix.python-version == '3.10' && matrix.networkx == 'stable' }}
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
